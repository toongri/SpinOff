buildscript {
	ext {
		queryDslVersion = "4.4.0"
		springFrameworkBootVersion = "2.5.9"
		projectLombokVersion = "1.18.22"
		swaggerVersion = "2.9.2"
		p6spyVersion = "1.8.0"
		mariaDBVersion = "2.7.5"
		gsonVersion = "2.8.9"
	}
}

plugins {
	id 'org.springframework.boot' version '2.5.9'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	//querydsl 추가
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id 'java'
}

group = 'com.nameless'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	//querydsl 추가
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

	implementation "org.springframework.boot:spring-boot-starter-data-jpa:${springFrameworkBootVersion}"
	implementation "org.springframework.boot:spring-boot-starter-web:${springFrameworkBootVersion}"
	implementation "org.springframework.boot:spring-boot-starter-thymeleaf:${springFrameworkBootVersion}"
	developmentOnly "org.springframework.boot:spring-boot-devtools:${springFrameworkBootVersion}"
	testImplementation "org.springframework.boot:spring-boot-starter-test:${springFrameworkBootVersion}"
	implementation "org.springframework.boot:spring-boot-starter-oauth2-client:${springFrameworkBootVersion}"
	implementation "org.springframework.boot:spring-boot-starter-security:${springFrameworkBootVersion}"

	compileOnly "org.projectlombok:lombok:${projectLombokVersion}"
	annotationProcessor "org.projectlombok:lombok:${projectLombokVersion}"

	implementation "org.mariadb.jdbc:mariadb-java-client:${mariaDBVersion}"
	implementation "org.apache.commons:commons-lang3:3.0" //

	implementation 'io.jsonwebtoken:jjwt:0.9.1' //jwt
	implementation "com.google.code.gson:gson:${gsonVersion}"//gson
	implementation 'org.springframework.boot:spring-boot-starter-web' //smtp
	//swagger 추가
	implementation "io.springfox:springfox-swagger2:${swaggerVersion}"
	implementation "io.springfox:springfox-swagger-ui:${swaggerVersion}"

	implementation "com.github.gavlyukovskiy:p6spy-spring-boot-starter:${p6spyVersion}"//개발용 코드 서비스시엔 성능비교 후 사용 필수
}
//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
//querydsl 추가 끝

test {
	useJUnitPlatform()
}

//front병합
def frontendDir = "$projectDir/frontend"

sourceSets {
	main {
		resources {
			srcDirs = ["$projectDir/src/main/resources"]
		}
	}
}
processResources {
			dependsOn "copyReactBuildFiles"
		}

task installReact(type: Exec) {
	workingDir "$frontendDir"
	inputs.dir "$frontendDir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		commandLine "npm.cmd", "audit", "fix"
		commandLine 'npm.cmd', 'install'
	} else {
		commandLine "npm", "audit", "fix"
		commandLine 'npm', 'install'
	}
}

task buildReact(type: Exec) {
	dependsOn "installReact"
	workingDir "$frontendDir"
	inputs.dir "$frontendDir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		commandLine "npm.cmd", "run-script", "build"
	} else {
		commandLine "npm", "run-script", "build"
	}
}

task copyReactBuildFiles(type: Copy) {
	dependsOn "buildReact"
	from "$frontendDir/build"
	into "$projectDir/src/main/resources/static"
}
